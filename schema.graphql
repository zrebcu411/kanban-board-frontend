# source: http://localhost:4000/graphql
# timestamp: Sat Jan 05 2019 18:35:44 GMT+0100 (GMT+01:00)

type Board {
  color: String!
  description: String!
  id: ID!
  lanes: [Lane!]!
  private: Boolean!
  title: String!
}

type Card {
  createdAt: String!
  description: String!
  id: ID!
  title: String!
}

type Lane {
  cards: [Card!]!
  id: ID!
  title: String!
}

type Mutation {
  createBoard(color: String!, description: String!, private: Boolean!, title: String!): Board!
  createCard(boardId: Int!, description: String!, laneId: Int!, title: String!): Card!
  createLane(boardId: Int!, title: String!): Lane!
  signin(email: String!, password: String!): SignInResponse!
  signup(email: String!, name: String!, password: String!): SignUpResponse!
}

type Query {
  board(id: Int!): Board!
  boards: [Board!]!
  me: User
}

enum SignInError {
  PASSWORD_INVALID
  USER_DOES_NOT_EXIST
}

type SignInResponse {
  errors: [SignInError!]!
  result: SignUpResult
}

enum SignUpError {
  EMAIL_ALREADY_USED
}

type SignUpResponse {
  errors: [SignUpError!]!
  result: SignUpResult
}

type SignUpResult {
  token: String!
}

type User {
  email: String!
  id: ID!
  name: String!
}
